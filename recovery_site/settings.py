# recovery_site/settings.py
"""
Django settings for recovery_site project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-default-key-for-development')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True') == 'True'

if DEBUG:
    ALLOWED_HOSTS = ['*']
    SECURE_SSL_REDIRECT = False # Отключите принудительное перенаправление на HTTPS в DEBUG режиме
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
else:
    ALLOWED_HOSTS = ['5.187.4.131']
    # Временно отключите SECURE_SSL_REDIRECT для локальной отладки с DEBUG=False
    # ПОМНИТЕ: на продакшене эта настройка ДОЛЖНА БЫТЬ True, и у вас должен быть настроен HTTPS
    SECURE_SSL_REDIRECT = False # <-- ИЗМЕНИТЕ ЭТУ СТРОКУ
    SESSION_COOKIE_SECURE = False # Эти можно оставить True, если не вызывают проблем
    CSRF_COOKIE_SECURE = False    # Но для полной уверенности, можете и их сделать False временно

# Application definition

INSTALLED_APPS = [
    # Wagtail apps
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail',
    'wagtailmedia',
    'wagtail.contrib.modeladmin',

    # Third party apps for Wagtail
    'taggit',

    # Django core apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'crispy_forms',
    'crispy_tailwind',
    'widget_tweaks',
    'imagekit',
    'django_redis',

    # Local apps
    'recovery_app',

    # 'recovery_app.sitemaps',  # Добавляем приложение для создания карты сайта
    'django.contrib.sitemaps',

    # Debug toolbar
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]
if DEBUG:
    MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']


# Настройка IP-адресов для отображения Debug Toolbar
INTERNAL_IPS = [
    '127.0.0.1',
    '0.0.0.0',
    'localhost',
    '172.18.0.3',
]

ROOT_URLCONF = 'recovery_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'recovery_app' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'recovery_site.context_processors.footer_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'recovery_site.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'recovery_db'),
        'USER': os.getenv('DB_USER', 'recovery_user'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'recovery_password'),
        'HOST': os.getenv('DB_HOST', 'db'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'recovery_app/static/recovery_app'),
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]


# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Для разработки
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'

EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_SSL = True
# EMAIL_USE_TLS=True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')
EMAIL_ADMIN = os.getenv('EMAIL_ADMIN', '')







# Google Maps API Key
GOOGLE_MAPS_API_KEY = os.getenv('GOOGLE_MAPS_API_KEY', '')

# WhatsApp number
WHATSAPP_NUMBER = os.getenv('WHATSAPP_NUMBER', '+449999999999')
# Tel number
TEL_NUMBER = os.getenv('TEL_NUMBER', '+449999999999')

# Support email
SUPPORT_EMAIL = os.getenv('SUPPORT_EMAIL', '')

# Social media URLs
FACEBOOK_URL = os.getenv('FACEBOOK_URL', 'https://facebook.com/yourpage')
INSTAGRAM_URL = os.getenv('INSTAGRAM_URL', 'https://instagram.com/yourpage')
TWITTER_URL = os.getenv('TWITTER_URL', 'https://twitter.com/yourpage')

# Analytics Settings
GOOGLE_ANALYTICS_ID = os.getenv('GOOGLE_ANALYTICS_ID', 'G-XXXXXXXXXX')
YANDEX_METRICA_ID = os.getenv('YANDEX_METRICA_ID', '12345678')

# SEO Settings
SITE_DOMAIN = os.getenv('SITE_DOMAIN', 'yourdomain.com')
CANONICAL_URL = os.getenv('CANONICAL_URL', 'https://yourdomain.com')

# Wagtail settings
WAGTAIL_SITE_NAME = 'Эвакуатор'
WAGTAILADMIN_BASE_URL = 'http://localhost:8080'



# CACHES
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': os.getenv('REDIS_URL', 'redis://127.0.0.1:6379/1'),
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_CLASS': 'redis.BlockingConnectionPool',
            'CONNECTION_POOL_CLASS_KWARGS': {
                'max_connections': 50,
                'timeout': 20,
            },
            'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
            'IGNORE_EXCEPTIONS': True,
        },
        'KEY_PREFIX': 'recovery_site',
        'TIMEOUT': 300,  # Default timeout of 5 minutes
    }
}

# Cache settings for different content types
CACHE_MIDDLEWARE_ALIAS = 'default'
CACHE_MIDDLEWARE_SECONDS = 300  # 5 minutes
CACHE_MIDDLEWARE_KEY_PREFIX = 'recovery_site'

# Cache timeouts for different content types
CACHE_TIMEOUTS = {
    'home_page': 60 * 60 * 24 * 3,  # 3 days for home page
    'static_content': 60 * 60 * 24,  # 1 day for static content
    'dynamic_content': 60 * 15,  # 15 minutes for dynamic content
    'media': 60 * 60 * 24 * 7,  # 7 days for media
}

# Wagtail cache settings
WAGTAIL_CACHE = True
WAGTAIL_CACHE_BACKEND = 'default'
WAGTAIL_CACHE_TIMEOUT = CACHE_TIMEOUTS['static_content']

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'



CSRF_TRUSTED_ORIGINS = [
    'http://5.187.4.131',
    'https://5.187.4.131',
]

# # Security Headers and Settings
# SECURE_SSL_REDIRECT = not DEBUG  # Перенаправление на HTTPS в продакшене
# SECURE_HSTS_SECONDS = 31536000  # HSTS на год
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SESSION_COOKIE_SECURE = not DEBUG  # Cookies только через HTTPS
# CSRF_COOKIE_SECURE = not DEBUG  # CSRF-токены только через HTTPS
# SECURE_BROWSER_XSS_FILTER = True  # Защита от XSS
# SECURE_CONTENT_TYPE_NOSNIFF = True  # Предотвращение MIME-типов
# X_FRAME_OPTIONS = 'DENY'  # Защита от кликджекинга

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8080',
    'http://127.0.0.1:8080',
    'http://5.187.4.131',
    'https://5.187.4.131',
]
